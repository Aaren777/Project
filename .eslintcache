[{"C:\\Users\\Ux-Dep\\Desktop\\project\\src\\index.js":"1","C:\\Users\\Ux-Dep\\Desktop\\project\\src\\App.js":"2","C:\\Users\\Ux-Dep\\Desktop\\project\\src\\reportWebVitals.js":"3","C:\\Users\\Ux-Dep\\Desktop\\project\\src\\components\\ToDo.js":"4","C:\\Users\\Ux-Dep\\Desktop\\project\\src\\Demo\\Conditional.js":"5"},{"size":517,"mtime":1617397208044,"results":"6","hashOfConfig":"7"},{"size":254,"mtime":1617397207990,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":1212,"mtime":1617397208039,"results":"10","hashOfConfig":"7"},{"size":1296,"mtime":1617397208005,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4vo1xv",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\Ux-Dep\\Desktop\\project\\src\\index.js",[],"C:\\Users\\Ux-Dep\\Desktop\\project\\src\\App.js",[],["24","25"],"C:\\Users\\Ux-Dep\\Desktop\\project\\src\\reportWebVitals.js",[],"C:\\Users\\Ux-Dep\\Desktop\\project\\src\\components\\ToDo.js",[],"C:\\Users\\Ux-Dep\\Desktop\\project\\src\\Demo\\Conditional.js",["26"],"import React, { Component } from 'react';\r\nimport styles from './styles.module.css';\r\n\r\nclass Conditional extends Component {\r\n    state = {\r\n        text1: 'Good Morning',\r\n        text2: 'Good Bye',\r\n        showFirst: true,\r\n        name: 'Aren',\r\n        showName: true\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            showFirst: !this.state.showFirst\r\n        });\r\n    };\r\n    toggleName = () => {\r\n        this.setState({\r\n            showName: !this.state.showName\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { text1, text2, showFirst, name, showName } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                { showFirst ?\r\n                    <h2>{text1}</h2> :\r\n                    <h2>{text2}</h2>\r\n                }\r\n                <button\r\n                    onClick={this.toggle}\r\n                >\r\n                    Toggle\r\n                </button>\r\n\r\n                <button\r\n                    onClick={this.toggleName}\r\n                >\r\n                    {\r\n                        showName ? 'Show Name' : 'Hide Name'\r\n                    }\r\n                </button>\r\n                {\r\n                    showName && <h1>{name}</h1> \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Conditional",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":2,"column":8,"nodeType":"33","messageId":"34","endLine":2,"endColumn":14},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]